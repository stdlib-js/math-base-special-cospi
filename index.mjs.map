{"version":3,"file":"index.mjs","sources":["../lib/cospi.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/*\n* Notes:\n*\t=> cos(-x) = cos(x)\n*\t=> sin(-x) = -sin(x)\n*\t=> cos(π/2) = 0\n*\t=> cos(0) = 1\n*\t=> cos(π) = -1\n*/\n\n\n// MODULES //\n\nvar isnan = require( '@stdlib/math-base-assert-is-nan' );\nvar isInfinite = require( '@stdlib/math-base-assert-is-infinite' );\nvar abs = require( '@stdlib/math-base-special-abs' );\nvar cos = require( '@stdlib/math-base-special-cos' );\nvar sin = require( '@stdlib/math-base-special-sin' );\nvar floor = require( '@stdlib/math-base-special-floor' );\nvar PI = require( '@stdlib/constants-float64-pi' );\nvar MAX_INTEGER = require( '@stdlib/constants-float64-max-safe-integer' );\n\n\n// VARIABLES //\n\nMAX_INTEGER += 1;\n\n\n// MAIN //\n\n/**\n* Computes the value of `cos(πx)`.\n*\n* @param {number} x - input value\n* @returns {number} function value\n*\n* @example\n* var y = cospi( 0.0 );\n* // returns 1.0\n*\n* @example\n* var y = cospi( 0.5 );\n* // returns 0.0\n*\n* @example\n* var y = cospi( 0.1 );\n* // returns ~0.951\n*\n* @example\n* var y = cospi( NaN );\n* // returns NaN\n*/\nfunction cospi( x ) {\n\tvar ax;\n\tvar ix;\n\tvar rx;\n\tvar y;\n\tif ( isnan( x ) ) {\n\t\treturn NaN;\n\t}\n\tif ( isInfinite( x ) ) {\n\t\treturn NaN;\n\t}\n\tax = abs( x );\n\tif ( ax > MAX_INTEGER ) {\n\t\t// Always even integer...\n\t\treturn 1.0;\n\t}\n\t// Argument reduction (reduce to [0,1))...\n\tix = floor( ax );\n\trx = ax - ix;\n\tif ( rx === 0.5 ) {\n\t\treturn 0.0;\n\t}\n\tif ( rx < 0.25 ) {\n\t\ty = cos( PI*rx );\n\t}\n\telse if ( rx < 0.75 ) {\n\t\trx = 0.5 - rx;\n\t\ty = sin( PI*rx ); // recall sin(-x) = -sin(x), thus returned result will be properly signed\n\t}\n\telse {\n\t\trx = 1.0 - rx;\n\t\ty = -cos( PI*rx );\n\t}\n\t// If the integer of `x` is odd, we need to flip the sign...\n\treturn ( ix%2 === 1 ) ? -y : y;\n}\n\n\n// EXPORTS //\n\nmodule.exports = cospi;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute cos(πx).\n*\n* @module @stdlib/math-base-special-cospi\n*\n* @example\n* var cospi = require( '@stdlib/math-base-special-cospi' );\n*\n* var y = cospi( 0.0 );\n* // returns 1.0\n*\n* y = cospi( 0.5 );\n* // returns 0.0\n*\n* y = cospi( 0.1 );\n* // returns ~0.951\n*\n* y = cospi( NaN );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar cospi = require( './cospi.js' );\n\n\n// EXPORTS //\n\nmodule.exports = cospi;\n"],"names":["isnan","require$$0","isInfinite","require$$1","abs","require$$2","cos","require$$3","sin","require$$4","floor","require$$5","PI","require$$6","MAX_INTEGER","require$$7","lib","x","ax","ix","rx","y","NaN"],"mappings":";;+tBAgCA,IAAIA,EAAQC,EACRC,EAAaC,EACbC,EAAMC,EACNC,EAAMC,EACNC,EAAMC,EACNC,EAAQC,EACRC,EAAKC,EACLC,EAAcC,EAKlBD,GAAe,EAmEf,IC/DAE,EDuBA,SAAgBC,GACf,IAAIC,EACAC,EACAC,EACAC,EACJ,OAAKrB,EAAOiB,IAGPf,EAAYe,GAFTK,KAKRJ,EAAKd,EAAKa,IACAH,EAEF,EAKI,MADZM,EAAKF,GADLC,EAAKT,EAAOQ,KAGJ,GAGPG,EADID,EAAK,IACLd,EAAKM,EAAGQ,GAEHA,EAAK,IAEVZ,EAAKI,GADTQ,EAAK,GAAMA,KAKNd,EAAKM,GADVQ,EAAK,EAAMA,IAIHD,EAAG,GAAM,GAAOE,EAAIA"}